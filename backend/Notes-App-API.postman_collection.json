{
  "info": {
    "name": "Notes App API",
    "description": "Complete API collection for the Notes Management application with user authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "api_key",
      "value": "your-secure-api-key-here",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Get Health Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    console.log('User registered successfully:', response);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"John Doe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.collectionVariables.set('jwt_token', response.access_token);",
                  "        console.log('JWT token saved:', response.access_token);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "{{api_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users?skip=0&take=10&orderBy=createdAt&sortOrder=desc",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "skip",
                  "value": "0",
                  "description": "Number of records to skip"
                },
                {
                  "key": "take",
                  "value": "10",
                  "description": "Number of records to take (max 100)"
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search term for name or email",
                  "disabled": true
                },
                {
                  "key": "orderBy",
                  "value": "createdAt",
                  "description": "Field to order by: id, email, name, createdAt, updatedAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order: asc or desc"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Deleted Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/deleted",
              "host": ["{{base_url}}"],
              "path": ["users", "deleted"]
            }
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Get User by Email",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/email/user@example.com",
              "host": ["{{base_url}}"],
              "path": ["users", "email", "user@example.com"]
            }
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"New User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            }
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"updated@example.com\",\n  \"name\": \"Updated Name\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Delete User (Soft)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/1",
              "host": ["{{base_url}}"],
              "path": ["users", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Restore User",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/1/restore",
              "host": ["{{base_url}}"],
              "path": ["users", "1", "restore"]
            }
          },
          "response": []
        },
        {
          "name": "Delete User (Permanent)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/1/permanent",
              "host": ["{{base_url}}"],
              "path": ["users", "1", "permanent"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notes",
      "item": [
        {
          "name": "Create Note",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My First Note\",\n  \"content\": \"This is the content of my first note. It can be quite long and detailed.\",\n  \"isPublic\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/notes",
              "host": ["{{base_url}}"],
              "path": ["notes"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Notes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notes?skip=0&take=10&orderBy=createdAt&sortOrder=desc",
              "host": ["{{base_url}}"],
              "path": ["notes"],
              "query": [
                {
                  "key": "skip",
                  "value": "0",
                  "description": "Number of records to skip"
                },
                {
                  "key": "take",
                  "value": "10",
                  "description": "Number of records to take (max 100)"
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search term for title or owner",
                  "disabled": true
                },
                {
                  "key": "orderBy",
                  "value": "createdAt",
                  "description": "Field to order by: title, createdAt, updatedAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc",
                  "description": "Sort order: asc or desc"
                },
                {
                  "key": "accessFilter",
                  "value": "",
                  "description": "Filter by access type: owned, edit, view, public",
                  "disabled": true
                },
                {
                  "key": "includeDeleted",
                  "value": "false",
                  "description": "Include soft-deleted notes",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Notes - Owned Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notes?accessFilter=owned",
              "host": ["{{base_url}}"],
              "path": ["notes"],
              "query": [
                {
                  "key": "accessFilter",
                  "value": "owned"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Notes - Public Only",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notes?accessFilter=public",
              "host": ["{{base_url}}"],
              "path": ["notes"],
              "query": [
                {
                  "key": "accessFilter",
                  "value": "public"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search Notes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notes?search=meeting",
              "host": ["{{base_url}}"],
              "path": ["notes"],
              "query": [
                {
                  "key": "search",
                  "value": "meeting"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Note by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notes/1",
              "host": ["{{base_url}}"],
              "path": ["notes", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Update Note",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Note Title\",\n  \"content\": \"This is the updated content of the note.\",\n  \"isPublic\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/notes/1",
              "host": ["{{base_url}}"],
              "path": ["notes", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Update Note Public Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isPublic\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/notes/1/public",
              "host": ["{{base_url}}"],
              "path": ["notes", "1", "public"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Note (Soft)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notes/1",
              "host": ["{{base_url}}"],
              "path": ["notes", "1"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}